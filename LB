# 负载均衡 -- LB

- 网站的伸缩性架构
  所谓网站的伸缩性，指不需要改变网站的软硬件设计，仅仅通过改变部署的服务器数量就可以扩大或缩小网站的服务处理能力。
  在整个互联网行业的发展渐进演化中，最重要的技术就是服务器集群，通过不断地向集群中添加服务器来增强整个集群的处理能力

## 初级 LVS + Keepalived
> http://www.cnblogs.com/edisonchou/p/4281978.html
> http://www.cnblogs.com/edisonchou/p/3851333.html

- 实现负载均衡技术
  - 实现负载均衡的基础技术
    1.HTTP重定向负载均衡
    特点: a.浏览器需要两次请求才能完成一次访问，性能较差 b.重定向服务器自身的处理能力有可能成为平静，整个集群的伸缩性规模有限 c.使用HTTP 302重定向有可能使搜索引擎判断为SEO作弊，降低搜索排名
    
    2.DNS域名解析负载均衡
    优点:将负载均衡工作转交给DNS，省掉了网站管理维护负载均衡服务器的麻烦
    缺点:a.目前的DNS是多级解析，每一级DNS都可能缓存A记录，当某台服务器下线后，即使修改了DNS的记录，仍然需要一段时间才能生效，这段时间，会导致用户访问已经下线的服务导致访问失败 b.DNS负载均衡的控制权在域名服务商那里，网站无法对其做更多改善和管理
    
    > TIPS: 大型网站总是部分使用DNS域名解析，利用域名解析作为第一级负载均衡手段，即域名解析得到的一组服务器不是实际的Web服务器，而是同样提供负载均衡的内部服务器，这组内部服务器再进行负载均衡，请求分发到真实的Web服务器
    
    3.反向代理负载均衡
      Web服务器不需要使用外部IP地址，而反向代理服务器则需要配置双网卡和内外部两套IP地址
    优点:和反向代理服务器功能集成在一起，部署简单
    缺点:反向代理服务器是所有请求和响应的中转站，其性能可能会成为瓶颈
    
    4.IP负载均衡
    优点:在内核进程完成数据分发，较反向代理复杂均衡(在应用程序中分发数据)有更好的处理性能
    缺点:由于所有请求响应都需要经过负载均衡服务器，集群的最大响应数据吞吐量不得不受制于负载均衡服务器网卡带宽
    
    5.数据链路层负载均衡 -- 三角传输模式、直接路由方式(DR)
    负载均衡数据分发过程中不修改IP地址，只修改Mac地址，由于实际处理请求的真实物理IP地址和数据请求目的IP地址一致，所以不需要通过负载均衡服务器进行地址转换，可将响应数据包直接返回给用户浏览器，避免负载均衡服务器网卡带宽成为瓶颈
    
    使用三角传输模式的链路层负载均衡是目前大型网站使用最广泛的一种负载均衡手段
    在Linux平台上最好的链路层负载均衡开源产品是LVS(Linux Virtual Server)
    
  - 负载均衡算法 -- 负载均衡技术赖以生存的核心
    从Web服务器列表中计算得到一台Web服务器的地址
    1.轮询
      所有请求被以此分发到每台应用服务器上，即每台服务器需要处理的请求数目都相同，适合于所有服务器硬件都相同的场景
    2.加权轮询
      根据应用服务器的配置性能的情况，在轮询的基础上，按照配置的权重将请求分发到每个服务器，高性能的服务器能分配更多的请求
    3.随机
      请求被随机分配到各个应用服务器，因为好的随机数本身就很均衡
    4.最少连接
      记录每个应用服务器正在处理的连接数(请求数)，将新到的请求分发到最少连接的服务器上
    5.源地址散列
      根据请求来源的IP地址进行Hash计算得到应用服务器，这样来自同一个IP地址的请求总在同一个服务器上处理，请求的上下文信息可以存储在这台服务器上
    
负载均衡类型
- 硬件
  F5
- 软件
  LVS(Linux Virtual Server)、Nginx
  
LVS: Linux virtual Server(www.linuxvirtualserver.org) 主要用于服务器集群的负载均衡
特点: 
  - 工作在网络层
  - 可以实现高性能、高可用的服务器集群技术
  - 廉价，可以把许多低性能的服务器组合在一起形成一个超级服务器
  - 易用，配置简单，有多种负载均衡方法
  - 稳定可靠，即使集群的某台服务器
